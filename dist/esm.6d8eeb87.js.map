{"mappings":"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CAAC;IAGnC,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAU,EAAE,EAAE;QACjD,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACpB,CAAC,CAAC;IAGL,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACxB,MAAM,CAAC,EAAE,CAAC,CAAC;IACX,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAE1B,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC5D,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAU,EAAE,EAAE;QAChD,IAAI,kBAAkB,GAAG,EAAE,CAAC,WAAY;YACtC,OAAO,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SAC3C,CAAC,AAAC;QAEH,IAAI,kBAAkB,IAAI,cAAc,CAAC,MAAM,EAC7C,+BAA+B;QAC/B,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;KAEjE,CAAC,CAAC;IAGL,cAAc,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;CAC3B;;;A;;AEnkBD,6CAAyC;;AACzC,wCAAyD;AACzD,2BAAwB;;A,I,S,G,a,U,S,I,S,O,E,U,E,C,E,S,E;I,S,K,C,K,E;Q,O,K,Y,C,G,K,G,I,C,C,S,O,E;Y,O,C,K,C,C;S,C,C;K;I,O,I,C,C,I,C,C,G,O,C,A,C,C,S,O,E,M,E;Q,S,S,C,K,E;Y,I;gB,I,C,S,C,I,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,Q,C,K,E;Y,I;gB,I,C,S,C,O,C,C,K,C,C,C;a,C,O,C,E;gB,M,C,C,C,C;a;S;Q,S,I,C,M,E;Y,M,C,I,G,O,C,M,C,K,C,G,K,C,M,C,K,C,C,I,C,S,E,Q,C,C;S;Q,I,C,A,C,S,G,S,C,K,C,O,E,U,I,E,C,C,C,I,E,C,C;K,C,C;C,A;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AC,IAAI,aAAa,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,WAAW,KAAK,UAAU,CACxE;CACH;AAED,SAAS,QAAQ,CAAC,CAAU,EAA5B;IACE,OAAO,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAC;CAC5C;;;A;;A,6C,O,C;A,gD,U,C;A,gE,0B,C;A,sE,gC,C;A,2D,qB,C;A,+C,S,C;A,wE,kC,C;A,8D,wB,C;A,0D,oB,C;A,gD,U,C;A,oD,c,C;A,0C,I,C;A,mD,a,C;A,yD,mB,C;A,6C,O,C;A,sD,gB,C;A,4C,M,C;A,4C,M,C;A,qD,e,C;A,6C,O,C;A,0D,oB,C;A,kD,Y,C;A,sD,gB,C;A,+C,S,C;A,+D,yB,C;A,mD,a,C;A,qD,e,C;A,+D,yB,C;A,gE,0B,C;A,yD,mB,C;A,kE,4B,C;A,gE,0B,C;A,sE,gC,C;A,wD,kB,C;A,2D,qB,C;A,+D,yB,C;A,gE,0B,C;A,iE,2B,C;A,sD,gB,C;A,0D,oB,C;A,wD,kB,C;A,4D,sB,C;A,8D,wB,C;A,sD,gB,C;A,kD,Y,C;A,4C,M,C;A,uD,iB,C;A,mD,a,C;A,iD,W,C;A,gF,0C,C;A,oE,8B,C;A,4D,sB,C;A,uD,iB,C;A,wD,kB,C;A,qD,e,C;A,mD,a,C;A,iD,W,C;A,6D,uB,C;A,8C,Q,C;A,qD,e,C;A,iD,W,C;A,mD,a,C;A,kE,4B,C;A,+D,yB,C;A,qC;;A,+B;A,4B;;A,2B;;A,6B;A,oD;A,4C;A,yC;A,8C;A,mD;;A,qC;;A,gC;;AErQM,MAAMA,QAAQ,GAAIC,CAAAA,GAAD,GAAsD;IAC5E,IAAIC,CAAAA,GAAAA,cAAM,CAAA,CAACC,QAAP,CAAgBF,GAAhB,CAAJ,EACE,OAAOA,GAAP,CAAA;SACK,IAAIA,GAAG,YAAYG,UAAnB,EACL,OAAOF,CAAAA,GAAAA,cAAM,CAAA,CAACG,IAAP,CAAYJ,GAAG,CAACK,MAAhB,EAAwBL,GAAG,CAACM,UAA5B,EAAwCN,GAAG,CAACO,UAA5C,CAAP,CAAA;SAEA,OAAON,CAAAA,GAAAA,cAAM,CAAA,CAACG,IAAP,CAAYJ,GAAZ,CAAP,CAAA;CANG,AAQN;A,I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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-e8ed531acff87a40.js","node_modules/@project-serum/sol-wallet-adapter/dist/esm/index.js","node_modules/@project-serum/sol-wallet-adapter/src/index.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/lib/index.browser.esm.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/to-buffer.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/minimalistic-assert/index.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/inherits/inherits_browser.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/utils.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/common.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/common.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/1.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/256.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/224.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/512.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/384.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/ripemd.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/hmac.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/@ethersproject/logger/lib.esm/_version.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/@ethersproject/logger/lib.esm/index.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/@ethersproject/bytes/lib.esm/_version.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/@ethersproject/bytes/lib.esm/index.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/@ethersproject/sha2/lib.esm/_version.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/@ethersproject/sha2/lib.esm/sha2.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/borsh-schema.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/publickey.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/account.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/transaction-constants.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/layout.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/shortvec-encoding.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/message.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/assert.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/transaction.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/sysvar.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/send-and-confirm-transaction.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/sleep.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/instruction.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/fee-calculator.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/nonce-account.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/bigint.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/system-program.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/loader.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/bpf-loader.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/compute-budget.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/epoch-schedule.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/errors.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/timing.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/tx-expiry-custom-errors.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/url.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/connection.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/keypair.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/ed25519-program.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/stake-program.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/secp256k1-program.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/validator-info.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/vote-account.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/vote-program.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/send-and-confirm-raw-transaction.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/util/cluster.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/@solana/web3.js/src/index.ts","node_modules/@project-serum/sol-wallet-adapter/node_modules/buffer/index.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"4edb090d6d8eeb87\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}",null,null,null,"import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {\n  PACKET_DATA_SIZE,\n  SIGNATURE_LENGTH_IN_BYTES,\n} from './transaction-constants';\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const newOpts = opts as TransactionBlockhashCtor;\n      Object.assign(this, newOpts);\n      this.recentBlockhash = newOpts.blockhash;\n      this.lastValidBlockHeight = newOpts.lastValidBlockHeight;\n    } else {\n      const oldOpts = opts as TransactionCtorFields_DEPRECATED;\n      Object.assign(this, oldOpts);\n      this.recentBlockhash = oldOpts.recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\nimport {u64} from './util/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport {u64} from './util/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction, TransactionStatus} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {toBuffer} from './util/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './util/tx-expiry-custom-errors';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const checkBlockHeight = async () => {\n      try {\n        const blockHeight = await this.getBlockHeight(commitment);\n        return blockHeight;\n      } catch (_e) {\n        return -1;\n      }\n    };\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: new Message(result.transaction.message),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {BlockheightBasedTransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: BlockheightBasedTransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | BlockheightBasedTransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy:\n    | BlockheightBasedTransactionConfirmationStrategy\n    | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './compute-budget';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './transaction-constants';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './vote-program';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/tx-expiry-custom-errors';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n"],"names":["toBuffer","arr","Buffer","isBuffer","Uint8Array","from","buffer","byteOffset","byteLength","assert","inherits_browserModule","require$$0","require$$1","utils","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","BlockHash","common","ft_1","ch32","maj32","s0_256","s1_256","g0_256","g1_256","shaCommon","require$$2","require$$3","SHA256","SHA512","require$$4","version","Struct","constructor","properties","Object","assign","encode","serialize","SOLANA_SCHEMA","decode","data","deserialize","decodeUnchecked","deserializeUnchecked","Enum","enum","keys","length","Error","map","key","Map","MAX_SEED_LENGTH","isPublicKeyData","value","_bn","undefined","PublicKey","decoded","bs58","BN","equals","publicKey","eq","toBase58","toBytes","toJSON","b","toArrayLike","zeroPad","alloc","copy","toString","createWithSeed","fromPublicKey","seed","programId","concat","hash","sha256","slice","createProgramAddressSync","seeds","forEach","TypeError","publicKeyBytes","toArray","is_on_curve","createProgramAddress","findProgramAddressSync","nonce","address","seedsWithNonce","err","findProgramAddress","isOnCurve","pubkeyData","pubkey","default","set","kind","fields","naclLowLevel","nacl","lowlevel","p","r","gf","t","chk","num","den","den2","den4","den6","set25519","gf1","unpack25519","S","M","D","Z","A","pow2523","neq25519","I","a","c","d","pack25519","crypto_verify_32","Account","secretKey","_keypair","sign","keyPair","fromSecretKey","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","SIGNATURE_LENGTH_IN_BYTES","property","BufferLayout","blob","rustString","rsl","struct","u32","offset","_decode","bind","_encode","rslShim","str","chars","span","authorized","lockup","ns64","voteInit","u8","getAlloc","type","layout","item","decodeLength","bytes","len","size","elem","shift","encodeLength","rem_len","push","PUBKEY_LENGTH","Message","args","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","programIdIndex","isAccountSigner","index","numRequiredSignatures","isAccountWritable","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","isProgramId","has","programIds","values","nonProgramIds","filter","_","numKeys","keyCount","shortvec","instruction","accounts","Array","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","seq","signDataLayout","Layout","transaction","signData","byteArray","accountCount","i","dataSlice","messageArgs","condition","message","TransactionStatus","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","isSigner","isWritable","Transaction","signature","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","prototype","hasOwnProperty","call","newOpts","blockhash","oldOpts","nonceInstruction","signers","add","items","compileMessage","JSON","stringify","console","warn","accountMetas","accountMeta","includes","uniqueMetas","pubkeyString","uniqueIndex","findIndex","x","sort","y","localeCompare","feePayerIndex","payerMeta","splice","unshift","signedKeys","unsignedKeys","compiledInstructions","indexOf","meta","invariant","keyIndex","_compile","valid","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","detached","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","verify","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","options","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","sendTransaction","status","confirmTransaction","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","encodeDecode","bigInt","bigIntLayout","src","toBigIntLE","toBufferLE","u64","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","ixType","entries","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","base","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","expectedLength","freeze","UpgradeNonceAccount","createAccount","params","transfer","BigInt","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","CHUNK_SIZE","Loader","getMinNumSignatures","Math","ceil","chunkSize","load","payer","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","error","owner","dataLayout","array","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","units","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","MINIMUM_SLOT_PER_EPOCH","trailingZeros","n","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","floor","getFirstSlotInEpoch","pow","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","code","customMessage","name","globalThis","fetch","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","TransactionExpiredBlockheightExceededError","defineProperty","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","makeWebsocketUrl","endpoint","url","URL","useHttps","protocol","host","port","String","Number","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","result","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","create","jsonRpcResultAndContext","context","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","fetchImpl","fetchWithMiddleware","info","init","modifiedFetchArgs","reject","modifiedInfo","modifiedInit","clientBrowser","RpcClient","request","callback","agent","method","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","res","waitTime","log","statusText","text","ok","createRpcRequest","client","response","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","isArray","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","writable","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","process","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","wsEndpoint","confirmTransactionInitialTimeout","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","_buildArgs","unsafeRes","getBalance","then","catch","e","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleAccountsInfoAndContext","publicKeys","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","encoding","configWithoutEncoding","getParsedProgramAccounts","strategy","rawSignature","decodedSignature","subscriptionCommitment","timeoutId","subscriptionId","done","confirmationPromise","onSignature","__type","PROCESSED","checkBlockHeight","getBlockHeight","_e","expiryPromise","timeoutMs","TIMED_OUT","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","outcome","race","clearTimeout","removeSignatureListener","getClusterNodes","getVoteAccounts","getSlot","getSlotLeader","getSlotLeaders","startSlot","limit","getSignatureStatus","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","addresses","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","getBlockProduction","extra","rest","getTransaction","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","transactionDetails","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getNonceAndContext","accountInfo","getNonce","requestAirdrop","to","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","simulateTransaction","transactionOrMessage","includeAccounts","originalTx","encodedTransaction","sigVerify","traceIndent","logTrace","join","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","delete","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","generate","skipValidation","encoder","TextEncoder","fromSeed","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","u16","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","privateKey","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","o","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","delegate","authorize","authorizeWithSeed","splitInstruction","split","splitWithSeed","merge","withdraw","deactivate","publicKeyCreate","ecdsaSign","secp256k1","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","sha3","keccak_256","update","digest","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","startsWith","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","recid","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","parse","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","authorizedWithdrawer","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","authorizedVoter","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","buf","idx","isEmpty","VoteInit","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","http","devnet","testnet","https","clusterApiUrl","cluster","tls","LAMPORTS_PER_SOL"],"version":3,"file":"esm.6d8eeb87.js.map","sourceRoot":"/__parcel_source_root/"}